name: "Terraform"

on:
  push:
    branches:
      - main

jobs:
  backend-setup:
    name: "Bootstrap Terraform Backend"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false

      - name: Check if backend already exists
        id: check-backend
        run: |
          set -e
          if aws s3api head-bucket --bucket cc-tf-state-backend-ci-cd-vin 2>/dev/null; then
            echo "Backend bucket already exists."
            echo "skip_backend=true" >> $GITHUB_ENV
          else
            echo "skip_backend=false" >> $GITHUB_ENV
          fi
          
      - name: Initialize and Apply Backend
        if: env.skip_backend == 'false'
        run: |
          terraform init -backend=false
          terraform apply -auto-approve


  # Job for infrastructure apply
  infra:
    name: Apply Infrastructure
    runs-on: ubuntu-latest
    needs: backend-setup
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     AWS_DEFAULT_REGION: ap-southeast-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.1'
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ./src
        run: terraform init

      - name: Terraform Plan
        working-directory: ./src
        run: terraform plan -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./src
        run: terraform apply -auto-approve